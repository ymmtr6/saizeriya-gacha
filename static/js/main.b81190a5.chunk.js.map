{"version":3,"sources":["utils/random.ts","utils/gacha.ts","components/LoadingModal.tsx","utils/pushPage.ts","components/DetailPage.tsx","components/MainPage.tsx","components/Block.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx","img/gachagacha.png"],"names":["Random","seed","arguments","length","undefined","Object","classCallCheck","this","x","y","z","w","t","min","max","Math","abs","next","simple","choise","items","balance","randomizer","option","sum","result","drinkBar","filter","item","orderId","target","toConsumableArray","alcoholic","counterSales","setOnly","map","i","price","reduce","a","push","splice","nextInt","sort","b","LoadingModal","props","_useState","useState","open","_useState2","slicedToArray","setOpen","useEffect","react_default","createElement","react_onsenui","isOpen","icon","size","default","spin","showClose","onClick","pushPage","component","title","navigator","objectSpread","DetailPage","itemList","setItemList","_useState3","_useState4","openToast","setOpenToast","hasItemList","useMemo","pageKey","concat","updateItems","setTimeout","Items","getItems","alcohol","key","className","newSeed","floor","random","dataSource","renderHeader","toLocaleString","renderRow","idx","modifier","name","disabled","direction","position","visible","obj","forEach","id","entries","width","countItemList","components_LoadingModal","MainPage","setAlcohol","_useState5","_useState6","setCounterSales","_useState7","_useState8","setDrinkBar","gachaButton","pushDetailPage","selectedBalance","style","src","gachaImg","onChange","e","value","renderPage","route","React","Block","initialRoute","animationOptions","delay","duration","App","components_Block","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","reload","catch","error","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App","URL","process","href","origin","addEventListener","fetch","headers","Service-Worker","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration","module","exports","p"],"mappings":"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","file":"static/js/main.b81190a5.chunk.js","sourcesContent":["/**\n *　XorShiftアルゴリズムによる疑似乱数生成器です。\n *\n * @see https://ja.wikipedia.org/wiki/Xorshift\n * @see https://neos21.net/blog/2021/12/27-01.html\n */\nclass Random {\n  // パラメータ\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n\n  /**\n   * 疑似乱数生成パラメータをセットします。\n   *\n   * @param seed\n   */\n  constructor(seed: number = 81456813180) {\n    this.x = 1145141919;\n    this.y = 334;\n    this.z = 810;\n    this.w = seed;\n  }\n\n  /**\n   * XorShiftアルゴリズムの実装です。\n   *\n   * @returns 乱数\n   */\n  next(): number {\n    const t = this.x ^ (this.x << 11);\n    this.x = this.y;\n    this.y = this.z;\n    this.z = this.w;\n    return (this.w = this.w ^ (this.w >>> 19) ^ (t ^ (t >>> 8)));\n  }\n\n  /**\n   * 指定範囲内の乱数を取得します。\n   *\n   * @param min 最小値\n   * @param max 最大値\n   * @returns 乱数\n   */\n  nextInt(min: number, max: number): number {\n    const r = Math.abs(this.next());\n    return min + (r % (max + 1 - min));\n  }\n}\n\nexport default Random;\n","import Items from \"../items.json\";\nimport Random from \"./random\";\nimport { SaizeriyaItem } from \"./SaizeriyaItem\";\n\ninterface GachaOptions {\n  alcoholic?: boolean;\n  counterSales?: boolean;\n  drinkBar?: boolean;\n}\n\nexport const getItems = (\n  balance: number,\n  seed?: number,\n  option?: GachaOptions\n) => {\n  const randomizer = new Random(seed);\n  const items = (Items as SaizeriyaItem[]).filter(\n    (item) => item.price <= balance\n  );\n  return simple.choise(items, balance, randomizer, option || {});\n};\n\ninterface Strategy {\n  choise: (\n    items: SaizeriyaItem[],\n    balance: number,\n    randomizer: Random,\n    option: GachaOptions\n  ) => SaizeriyaItem[];\n}\n\nconst FILLING_RATE = 0.9;\n\nexport const simple: Strategy = {\n  choise: (\n    items: SaizeriyaItem[],\n    balance: number,\n    randomizer: Random,\n    option: GachaOptions\n  ) => {\n    let sum: number, min: number;\n    let result: SaizeriyaItem[] = option.drinkBar\n      ? items.filter((item) => item.orderId === \"DB01\")\n      : [];\n    let target = [...items]\n      .filter((item) => (option.alcoholic ? true : !item.alcoholic))\n      .filter((item) => (option.counterSales ? true : !item.counterSales))\n      .filter((item) => (option.drinkBar ? item.orderId !== \"DB01\" : true))\n      .filter((item) => !item.setOnly);\n\n    while (true) {\n      sum = result.map((i) => i.price).reduce((a, x) => a + x, 0);\n      target = [...target].filter((item) => item.price <= balance - sum);\n      if (target.length === 0 || sum > balance * FILLING_RATE) {\n        break;\n      }\n      result.push(\n        target.splice(randomizer.nextInt(0, target.length - 1), 1)[0]\n      );\n    }\n    return result.sort((a, b) =>\n      a.orderId < b.orderId ? -1 : a.orderId === b.orderId ? 0 : 1\n    );\n  },\n};\n","import { Button, Modal, Icon } from \"react-onsenui\";\nimport React, { useEffect, useState } from \"react\";\n\ninterface LoadingProp {\n  open: boolean;\n  showClose?: boolean;\n}\n\nconst LoadingModal: React.FC<LoadingProp> = (props) => {\n\n  const [open, setOpen] = useState(props.open);\n\n  useEffect(() => {\n    setOpen(props.open);\n  }, [props.open]);\n\n  return (\n    <Modal isOpen={open}>\n      <Icon\n        icon=\"md-spinner\" size={{ default: 128 }} spin />\n      <p>Loading...</p>\n      {props.showClose && <Button onClick={() => setOpen(false)}>Close</Button>}\n    </Modal>)\n}\n\nexport default LoadingModal;\n","import React from \"react\";\nimport { NavigatorProps } from \"../components/Block\";\n\nexport const pushPage = (\n  props: NavigatorProps,\n  component: React.FC,\n  title?: string\n) => {\n  props.navigator.pushPage({\n    component: component,\n    title: title,\n    props: { ...props },\n  });\n};\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { Page, Row, Col, Toolbar, BackButton, ToolbarButton, Icon, List, ListItem, ListHeader, SpeedDial, SpeedDialItem, Fab, Toast } from 'react-onsenui';\nimport { getItems } from '../utils/gacha';\nimport ons from 'onsenui';\nimport { SaizeriyaItem } from '../utils/SaizeriyaItem';\nimport LoadingModal from './LoadingModal';\nimport { pushPage } from '../utils/pushPage';\n\nconst DetailPage: React.FC = (props: any) => {\n\n  const [itemList, setItemList] = useState<SaizeriyaItem[]>([]);\n  const [openToast, setOpenToast] = useState<boolean>(false);\n\n  const hasItemList = useMemo<boolean>(() => itemList && itemList.length !== 0, [itemList]);\n\n  const pageKey = `detail_${props.seed}`;\n\n  const renderHeader = () => {\n    const sum = hasItemList && itemList.map((i) => i.price).reduce((a, x) => a + x);\n    return <ListHeader>{sum ? `総額${sum.toLocaleString()}円` : ''}(予算{props.balance.toLocaleString()\n    }円)</ListHeader>\n  }\n\n  const countItemList = () => {\n    const obj: { [key: string]: number } = {};\n    itemList.map((item) => item.orderId)\n      .forEach((id) => {\n        obj[id] = ++obj[id] || 1;\n      })\n\n    return Object.entries(obj).map((item) =>\n      <Row key={`toast_${item[0]}`}>\n        <Col width=\"20%\">{item[0]}</Col>\n        <Col>{item[1]}</Col>\n      </Row>\n    )\n  }\n\n  const selectIcon = (orderId: string) => {\n    const itemType = orderId.slice(0, 2);\n    switch (itemType) {\n      case 'WN':\n      case 'BR':\n        return 'md-wine-bar';\n      case 'DB':\n        return 'md-local-drink';\n      case 'PZ':\n        return 'md-local-pizza';\n\n    }\n    return 'md-local-dining'\n  }\n\n  const renderRow = (item: SaizeriyaItem, idx: number) => {\n    return (\n      <ListItem key={`${pageKey}_item_${idx}`} modifier={idx === itemList.length - 1 ? 'longdivider' : null}>\n        {/* <div className=\"left\">\n          <Icon key={`item_${idx}_icon`} icon={selectIcon(item.orderId)} />\n        </div> */}\n        <div className='center'>\n          {`${item.name}`}\n        </div>\n        <div className='right'>\n          {`${item.price.toLocaleString()}円`}\n        </div>\n      </ListItem >\n    )\n  }\n\n  const updateItems = (seed?: number) => {\n    // 通信しているふうに振る舞う\n    setTimeout(() => {\n      const items = getItems(props.balance, seed,\n        { alcoholic: props.alcohol, counterSales: props.counterSales, drinkBar: props.drinkBar });\n      setItemList(items);\n    }, 1000);\n  }\n\n  // 初回更新\n  useEffect(() => {\n    updateItems(props.seed);\n  }, []);\n\n\n  return (\n    <Page key={pageKey}>\n      <Toolbar>\n        <div className='left'>\n          <BackButton>Back</BackButton>\n        </div>\n        <div className='center'>ガチャ結果</div>\n        <div className='right'>\n          <ToolbarButton onClick={() => { setOpenToast(!openToast); }}>\n            注文\n          </ToolbarButton>\n          <ToolbarButton onClick={\n            () => {\n              const newSeed = Math.floor(Math.random() * 100000);\n              setOpenToast(false);\n              pushPage({ ...props, balance: props.balance, seed: newSeed }, DetailPage, `detail_${newSeed}`);\n            }\n          }>\n            <Icon\n              icon=\"fa-refresh\" />\n          </ToolbarButton>\n          <div>注文</div>\n        </div>\n\n      </Toolbar>\n      <div className='Under-toolbar'>\n        <section >\n          <List\n            dataSource={itemList}\n            renderHeader={renderHeader}\n            renderRow={renderRow}\n          />\n        </section>\n      </div>\n      <SpeedDial disabled={false} direction='up' position='right bottom'>\n        <Fab><Icon icon=\"md-share\"></Icon></Fab>\n        <SpeedDialItem>\n          <Icon icon='md-twitter' />\n        </SpeedDialItem>\n      </SpeedDial>\n\n      {/* orderIdと個数を表示する注文toast */}\n      {<Toast visible={openToast} className=\"main\">\n        <div>\n          {countItemList()}\n        </div>\n        <button onClick={() => setOpenToast(false)}>Close</button>\n      </Toast>}\n\n      {/* itemListがない時はLoadingModalを表示する */}\n      {!hasItemList && <LoadingModal open />}\n    </Page >\n  );\n};\n\nexport default DetailPage;\n","import React, { useEffect, useState } from \"react\";\nimport { Page, Button, Toolbar, List, ListHeader, ListItem, Row, Col, Switch, Card } from \"react-onsenui\";\nimport DetailPage from \"./DetailPage\";\nimport { NavigatorProps } from './Block';\nimport ons from \"onsenui\";\nimport { pushPage } from \"../utils/pushPage\";\nimport gachaImg from \"../img/gachagacha.png\";\n\ninterface MainProps extends NavigatorProps {\n  balance?: number;\n  seed?: number;\n  alcohol?: boolean;\n  counterSales?: boolean;\n  drinkBar?: boolean;\n}\n\nconst MainPage: React.FC<MainProps> = (props) => {\n\n  const [balance, setBalance] = useState(props.balance || 1000);\n  const [alcohol, setAlcohol] = useState<boolean>(false);\n  const [counterSales, setCounterSales] = useState<boolean>(false);\n  const [drinkBar, setDrinkBar] = useState<boolean>(false);\n\n\n  const seed = Math.floor(Math.random() * 100000);\n\n  const gachaButton = (balance: number) => {\n\n    return (\n      <Button key={`${balance}-yen-button`} modifier=\"large\"\n        onClick={() => pushDetailPage(balance)}>\n        <div>{`${balance}円ガチャ`}</div>\n      </Button>\n    )\n  }\n\n  const pushDetailPage = (selectedBalance: number) => {\n    pushPage({\n      ...props,\n      balance: selectedBalance,\n      seed: seed,\n      alcohol: alcohol,\n      counterSales: counterSales,\n      drinkBar: drinkBar\n    }, DetailPage, `detail_${seed}`);\n  }\n\n  useEffect(() => {\n\n  });\n\n  return (\n    <Page key={`main`}>\n      <Toolbar>\n        <div className=\"center\">サイゼガチャ</div>\n      </Toolbar>\n      <div className=\"Under-toolbar\">\n        <section >\n          <Card>\n            <img style={{ width: \"100%\" }} src={gachaImg} />\n          </Card>\n        </section>\n        <section className=\"row-col-m2\" >\n          {/* <Button modifier=\"large\" onClick={() => { ons.notification.alert(\"alert\") }}>\n            アラートボタン\n          </Button>\n          <Button onClick={() => { setLoading(true); }}>\n            Modal\n          </Button> */}\n          {/* <Button modifier=\"large\" onClick={() => { pushPage(props, DetailPage, \"DetailPage\") }} className=\"gcButton\">\n            ガチャ\n          </Button> */}\n\n          <Row>\n            <Col>\n              {gachaButton(800)}\n            </Col>\n            <Col>\n              {gachaButton(1000)}\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              {gachaButton(1500)}\n\n            </Col>\n            <Col>\n              {gachaButton(2000)}\n            </Col>\n          </Row>\n          <List>\n            <ListHeader>Option</ListHeader>\n            <ListItem>\n              <div className=\"center\">ドリンクバーをつける</div>\n              <div className=\"right\">\n                <Switch onChange={(e: any) => { setDrinkBar(e.value) }}></Switch>\n              </div>\n            </ListItem>\n            <ListItem>\n              <div className=\"center\">アルコールを含める</div>\n              <div className=\"right\">\n                <Switch onChange={(e: any) => { setAlcohol(e.value); }}></Switch>\n              </div>\n            </ListItem>\n            <ListItem>\n              <div className=\"center\">店頭販売商品を含める</div>\n              <div className=\"right\">\n                <Switch onChange={(e: any) => { setCounterSales(e.value); }}></Switch>\n              </div>\n            </ListItem>\n\n          </List>\n        </section>\n      </div >\n    </Page >\n  );\n};\n\nexport default MainPage;\n","import React from 'react';\nimport { Navigator } from 'react-onsenui';\nimport { useState } from 'react';\nimport ons from 'onsenui';\nimport MainPage from './MainPage';\nimport { NavigatorInfo } from '../utils/NavigatorInfo';\n\nexport interface NavigatorProps {\n  navigator?: any;\n  [prop: string]: any;\n}\n\nconst renderPage = (route: any, navigator: any) => {\n  const props = route.props || {};\n  props.navigator = navigator;\n  props.key = route.title;\n  return React.createElement(route.component, props);\n}\n\nconst Block: React.FC = (props) => {\n\n  return (<Navigator\n    renderPage={renderPage}\n    initialRoute={\n      {\n        component: MainPage,\n        title: 'MainPage',\n        props: { ...props }\n      } as NavigatorInfo\n    }\n    animationOptions={{\n      delay: 0.1,\n      duration: 0.4\n    }}\n  />)\n}\n\nexport default Block;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Block from './components/Block';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <div className='frame'>\n        <div className='frame-img'></div>\n      </div>\n      <header className=\"App-header main\">\n        <Block />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          } else if (installingWorker.state === \"activated\") {\n            window.location.reload();\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport 'onsenui/css/onsenui.css';\nimport \"onsenui/css/onsen-css-components.css\"\nimport \"onsenui\";\nimport \"react-onsenui\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/gachagacha.3b3eaa7e.png\";"],"sourceRoot":""}